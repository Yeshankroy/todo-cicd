name: Deploy to AWS Apache Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}  # Store EC2 public IP as a GitHub Secret
        USER: ubuntu
        REPO_URL: "https://github.com/YOUR_USERNAME/YOUR_REPOSITORY.git"  # Replace with your repo

      run: |
        # Debugging: Print if PRIVATE_KEY is empty
        if [[ -z "$PRIVATE_KEY" ]]; then
          echo "ERROR: PRIVATE_KEY is empty!"
          exit 1
        fi

        # Setup SSH Key
        mkdir -p ~/.ssh
        echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $HOST >> ~/.ssh/known_hosts

        # Debugging: Check SSH Connection
        ssh -o StrictHostKeyChecking=no $USER@$HOST "echo Connected to EC2"

        # Deploy changes
        ssh -o StrictHostKeyChecking=no $USER@$HOST << 'EOF'
          set -e  # Stop script if any command fails
          cd /var/www/html/ || exit 1

          # Ensure Git is installed
          which git || sudo apt-get install -y git

          # Fix ownership and permissions before pulling code
          sudo chown -R ubuntu:ubuntu /var/www/html/
          sudo chmod -R 775 /var/www/html/

          # Set /var/www/html as a safe Git directory
          git config --global --add safe.directory /var/www/html

          # Check if this is a Git repository
          if [ ! -d ".git" ]; then
            echo "Git repository not found! Cloning..."
            sudo rm -rf /var/www/html/
            sudo git clone https://x-access-token:${{ secrets.GITHUB_DEPLOY_KEY }}@github.com/YOUR_USERNAME/YOUR_REPOSITORY.git /var/www/html/
            cd /var/www/html/
          else
            echo "Git repository exists. Pulling latest changes..."
            git fetch --all
            git reset --hard origin/main
          fi

          # Set correct permissions for Apache
          sudo chown -R www-data:www-data /var/www/html/
          sudo chmod -R 755 /var/www/html/

          # Restart Apache
          sudo systemctl restart apache2
        EOF
